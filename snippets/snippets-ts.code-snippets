{
  "🌈 Request Demo": {
    "prefix": "lre",
    "body": [
      "// 🌈 数据请求",
      "const getDataLoading = ref(false);",
      "const getData = async () => {",
      "if (getDataLoading.value) return;",
      "getDataLoading.value = true;",
      "const params = {};",
      " const { code, msg, result = [] } = ({} = await findAllStudents(params));",
      " if (code === 0 && result) {",
      " console.log('---数据请求成功---', result);",
      " } else {",
      "   console.log('---数据请求失败---', msg);",
      " }",
      "     getDataLoading.value = false;",
      " };"
    ],
    "description": "🌈api requset demo"
  },
  "🌈 console.log()": {
    "prefix": "lcl",
    "body": [
      "console.log('🌈-----${TM_CURRENT_LINE/^(.*)lcl//}----- ', ${TM_CURRENT_LINE/^(.*)lcl//}); // "
    ],
    "description": "🌈console.log('🌈-----val-----',val)"
  },

  // 箭头函数
  "🌈 arrow function": {
    "prefix": "laf",
    "body": [
      "const ${1:fnName} = (${2:arg}) => {",
      "  ${3:console.log('🌈-----I am a function ----- ');}",
      "};"
    ],
    "description": "🌈arrow function"
  },
  // if-else
  "🌈 if-else": {
    "prefix": "lif",
    "body": [
      "if (${1:condition}) {",
      "  ${2:console.log('🌈-----if part-----');}",
      "} else {",
      "  ${3:console.log('🌈-----else part-----');}",
      "}"
    ],
    "description": "🌈if-else"
  },
  // switch-case
  "🌈 switch-case": {
    "prefix": "lsw",
    "body": [
      "switch (${1:condition}) {",
      "  case ${2:case} :",
      "    ${3:console.log('🌈-----case part-----');}",
      "    break;",
      "  default:",
      "    ${4:console.log('🌈-----default part-----');}",
      "}"
    ],
    "description": "🌈switch-case"
  },
  // vue3 setup
  // define ref
  "🌈 define ref": {
    "prefix": "lref",
    "body": ["const ${1:refName} = ref(${2:val});"],
    "description": "🌈define ref"
  },
  // define reactive
  "🌈 define reactive": {
    "prefix": "lrea",
    "body": ["const ${1:reactiveName} = reactive(${2:val});"],
    "description": "🌈define reactive"
  },
  // define computed
  "🌈 define computed": {
    "prefix": "lcom",
    "body": [
      "const ${1:computedName} = computed(() => {",
      "  return ${2:val};",
      "});"
    ],
    "description": "🌈define computed"
  },
  // define watch
  "🌈 define watch": {
    "prefix": "lwa",
    "body": ["watch(${1:watchName}, (val) => {", "  ${2:val}", "});"],
    "description": "🌈define watch"
  },
  // define watchEffect
  "🌈 define watchEffect": {
    "prefix": "lwe",
    "body": ["watchEffect(() => {", "  ${1:val}", "});"],
    "description": "🌈define watchEffect"
  },
  // define onMounted
  "🌈 define onMounted": {
    "prefix": "lmo",
    "body": ["onMounted(() => {", "  ${1:val}", "});"],
    "description": "🌈define onMounted"
  },
  // define onBeforeMount
  "🌈 define onBeforeMount": {
    "prefix": "lbm",
    "body": ["onBeforeMount(() => {", "  ${1:val}", "});"],
    "description": "🌈define onBeforeMount"
  },
  // define onBeforeUnmount
  "🌈 define onBeforeUnmount": {
    "prefix": "lbu",
    "body": ["onBeforeUnmount(() => {", "  ${1:val}", "});"],
    "description": "🌈define onBeforeUnmount"
  },
  // define onUnmounted
  "🌈 define onUnmounted": {
    "prefix": "lun",
    "body": ["onUnmounted(() => {", "  ${1:val}", "});"],
    "description": "🌈define onUnmounted"
  },
  // 代码注释块
  "🌈 code comment": {
    "prefix": "lcc",
    "body": [
      "/**",
      " * @func ${1:fnName}",
      " * @param ${2:arg}",
      " */"
    ],
    "description": "🌈code comment"
  },
   "🌈 vue-hooks-pure request": {
    "prefix": "lvhp",
    "body": [
      "const {",
      "  search,",
      "  onRefresh,",
      "  onLoad,",
      "  result,",
      "} = useRequest(${1:requestApi}, {",
      "  target: 'list',",
      "  getVal: (res) => {",
      "    return res",
      "  },",
      "  listOptions: {",
      "    defaultPageKey: 'page',",
      "    defaultSizeKey: 'size',",
      "    defaultDataKey: 'list',",
      "    defaultPage: -1,",
      "    getTotal: (data) => {",
      "      const total = getObjVal(data, 'data.totalElements', 0)",
      "      return total",
      "    },",
      "  },",
      "})"
    ],
    "description": "🌈 request by vue-hooks-pure"
  }
}
